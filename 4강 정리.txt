<문자열>
1. 문자열
: 문자들의 집합을 의미 큰따옴표, 작은따옴표를 사용해서 나타냄
Ex. 
sentence1 = '나는 소년입니다'
print(sentence1)

2. 슬라이싱
문자열을 자르는 것
리스트도 일종의 문자열이어서 인덱스를 이용해 자를 수 있음
리스트명[인덱스넘버]
단, 모든 파이썬은 0부터 세기 시작함
n번부터 n+3번까지 슬라이싱하고싶다면
  ㄴ 변수명[인덱스넘버 n-1:n+3]하면됨 항상 0부터 세기 시작한다는 것을 생각!
  ㄴ n+3을 하는 이유는 : 뒤 숫자는 포함하지 않기 때문
변수명[:인덱스] → 처음부터 인덱스 직전까지 슬라이싱
변수명[인덱스:] → 인덱스부터 끝까지 슬라이싱
변수명[:] → 처음부터 끝까지 슬라이싱
변수명[-1] → 맨 뒤의 숫자 출력
변수명[-7:] → 맨 뒤에서 7번째 위치로부터 끝까지(뒤에서 부터 세는건 0부터 세지 않음 -1,-2 이런식으로 센다)


3. 문자열처리함수
lower : 소문자 변환
upper : 대문자 변환
isupper : 대문자인지 확인
islower : 소문자인지 확인
replace : 문자열 바꾸기
index : 찾으려는 문자열의 인덱스(없으면 에러남)
find : 찾으려는 문자열의 인덱스(없으면 -1)
count : 문자열이 나온 횟수
len : 문자열 길이 함수

python = "Python is Amazing"

print(python.lower()) # python is amazing
print(python.upper()) # PYTHON IS AMAZING
print(python[0].isupper()) # True : 0 번째 인덱스의 값이 대문자인지 확인
print(len(python)) # 17 : 띄어쓰기를 포함한 문자열의 전체 길이 (length)
print(python.replace("Python", "Java")) # Java is Amazing
-> 문자열 처리함수는 앞이 python으로 시작함

find와 index는 둘다 문자열의 위치를 반환하는 데에선 유사하나, 만약 찾는 단어가 없으면 index는 에러가 발생하며 프로그램을종료하고
find는 -1을 출력하고 프로그램을 계속 수행함

4. 문자열포맷
print(변수명+"")말고도 여러 포맷이 있음
(1)print("~~%s~~%s"%("문자열", "문자열")) : %d, %o등 여러개가 있으나 왠만하면 %s쓰는 것 추천
print("나는 %s색과 %s색을 좋아해요." % ("파란", "빨간")) # 나는 파란색과 빨간색을 좋아해요.

(2)print("~~{}~~~{}".format("문자열", "문자열"))
print("나는 {}살입니다.".format(20)) # 나는 20살입니다.
print("나는 {}색과 {}색을 좋아해요.".format("파란", "빨간")) # 나는 파란색과 빨간색을 좋아해요
print("나는 {0}색과 {1}색을 좋아해요.".format("파란", "빨간")) # 나는 파란색과 빨간색을 좋아해요
print("나는 {1}색과 {0}색을 좋아해요.".format("파란", "빨간")) # 나는 빨간색과 파란색을 좋아해요
print("나는 {age}살이며, {color}색을 좋아해요.".format(age=20, color="빨간"))
# 나는 20살이며, 빨간색을 좋아해요
print("나는 {age}살이며, {color}색을 좋아해요.".format(color="빨간", age=20))
# 나는 20살이며, 빨간색을 좋아해요 (.format 뒤에 순서를 변경해도 괜찮아요)

(3)print(f"~~~{변수명}~~~{변수명/문자열}")
age = 20
color = "빨간"
print(f"나는 {age}살이며, {color}색을 좋아해요.") # 나는 20살이며, 빨간색을 좋아해요.

5. 탈출문자
: 띄어쓰기, 엔터 등 출력할 때 변화를 주기 위해 사용
\n : 엔터
\ : 그냥쓸땐 파이썬 함수, 키로 쓰이던 것들을 문자로 사용할 수 있게 해줌
\\ : 출력하고 싶은 문자에 \가 들어갈때 탈출문자말고 문자열로 인식할 수 있게해줌
\r : 뒤에 나오는 문자열을 맨 앞으로 위치시킴->덮어쓰는형태
\b : 백스페이스 앞 글자를 하나 삭제해준다


print("백문이 불여일견\n백견이 불여일타")
# 백문이 불여일견
# 백견이 불여일타

print("저는 '나도코딩'입니다.") # 저는 '나도코딩'입니다.
print('저는 "나도코딩"입니다.') # 저는 "나도코딩"입니다.
print("저는 \"나도코딩\"입니다.") # 저는 "나도코딩"입니다.
print("C:\Users\Nadocoding\Desktop\PythonWorkspace>")
  ㄴ 탈출문자같은게 여럿껴있어서 에러
print("C:\\Users\\Nadocoding\\Desktop\\PythonWorkspace>") # C:\Users\Nadocoding\Desktop\PythonWorkspace>
  ㄴ\를 두번써주면 됨 혹은
print(r"C:\Users\Nadocoding\Desktop\PythonWorkspace>") # raw string
  ㄴ\\하지 말고 r붙이기 

print("Red Apple\rPine") # PineApple
print("Redd\bApple") # RedApple